#eureka:
#  client:
#    fetchRegistry: true
#    registerWithEureka: true
#    serviceUrl:
#      defaultZone: http://localhost:9020/eureka
#  instance:
#    instance-id: ${spring.application.name}:${instanceId:${random.value}}
#    preferIpAddress: true
#server:
#  port: 0
#spring:
#  application:
##    name: search-service
#  data:
#    mongodb:
#      database: searchServcieDb
#      uri: mongodb://localhost:27017
#  kafka:
#    consumer:
#      auto-offset-reset: earliest
#      bootstrap-servers: localhost:9092
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      properties:
#        spring:
#          json:
#            trusted:
#              packages: '*'
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#
#
##eureka: client: fetchRegistry: true registerWithEureka: true serviceUrl: defaultZone: http://localhost:9000/eureka instance: instance-id: ${spring.application.name}:${instanceId:${random.value}} preferIpAddress: true server: port: 0 spring: application: name: filter-service data: mongodb: database: inventory2 uri: mongodb://localhost:27017 kafka: consumer: auto-offset-reset: earliest bootstrap-servers: localhost:9092 key-deserializer: org.apache.kafka.common.serialization.StringDeserializer properties: spring: json: trusted: packages: '*' value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#
#
##      kafka: consumer: auto-offset-reset: earliest bootstrap-servers: localhost:9092 key-deserializer: org.apache.kafka.common.serialization.StringDeserializer properties: spring: json: trusted: packages: '*' value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#

eureka:
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:9020/eureka
  instance:
    instance-id: ${spring.application.name}:${instanceId:${random.value}}
    preferIpAddress: true
server:
  port: 0
spring:
  application:
    name: search-service
  data:
    mongodb:
      database: searchServiceDb
      uri: mongodb://localhost:27017
  kafka:
    consumer:
      auto-offset-reset: earliest
      bootstrap-servers: localhost:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
      error-handler:
        deserializer:
          value:
            delegate:
              class: org.springframework.kafka.support.serializer.JsonDeserializer
